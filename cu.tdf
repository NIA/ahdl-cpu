SUBDESIGN CU
(
  CLK
    : INPUT;
  
  ip_ena,       % do increment ip %
  ip_mode_inc,  % inc or reset %
  ip_ab_ena,    % enable write to address bus %

  ram_write,    % ram mode %
  ram_db_ena,   % enable write to data bus %

  ir_ena        % latch current instr. into ir %
    : OUTPUT;
)

VARIABLE
  state : MACHINE
    WITH STATES
    (
      IP_TO_RAM_ADDR,
      RAM_SET_IA,
      RAM_I_TO_IR,
      IP_SET_INC,
      IDLE
    );

BEGIN
  state.clk = CLK;
  state.(reset, ENA) = (GND, VCC);
  
  ip_mode_inc = VCC;  % only incrementing yet %
  ip_ab_ena = VCC;    % only ip has access to AB yet %

  ram_write = GND;    % only reading yet %
  ram_db_ena = VCC;   % only ram has access to DB yet %

     % remake %
  CASE state IS
    WHEN IP_TO_RAM_ADDR =>
      ip_ena = GND;
      ir_ena = GND;
      state = RAM_SET_IA;
    WHEN RAM_SET_IA =>
      ip_ena = GND;
      ir_ena = GND;
      state = RAM_I_TO_IR;
    WHEN RAM_I_TO_IR =>
      ip_ena = GND;
      ir_ena = VCC;
      state = IP_SET_INC;
    WHEN IP_SET_INC =>
      ip_ena = VCC;
      ir_ena = GND;
      state = IP_TO_RAM_ADDR;
    WHEN OTHERS =>
      state = IDLE;
  END CASE;

END;
