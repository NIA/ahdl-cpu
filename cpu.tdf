INCLUDE "ip.inc";
INCLUDE "cu.inc";
INCLUDE "ram.inc";
INCLUDE "alu.inc";

SUBDESIGN CPU
(
  CLK
    : INPUT;
  
  AB[7..0],
  DB[15..0],
  rA[15..0],
  Greater,
  Less,
  Equal,

  debug_ram_out[15..0],
  debug_ip_ab_ena,
  debug_ir_ab_ena,
  debug_ram_db_ena,
  debug_a_db_ena,
  debug_alu_db_ena,
  debug_alu_ena,
  debug_cop[7..0],
  debug_addr[7..0],
  debug_greater,
  debug_less
    : OUTPUT;
)

VARIABLE
  the_ip  : IP;
  the_cu  : CU;
  the_ram : RAM;
  the_alu : ALU;
  AddrBus[7..0]   : TRI_STATE_NODE;
  DataBus[15..0]  : TRI_STATE_NODE;

  % registers %
    % instruction register %
  IR[15..0]   : DFFE;

  COP[7..0]   : NODE; % instruction > code of operation %
  ADDR[7..0]  : NODE; % instruction > address %
  
    % other registers %
  A[15..0]    : DFFE;    


BEGIN
  the_cu.CLK = CLK;
  the_cu.COP[] = COP[];
  the_cu.Greater = the_alu.Greater;
  the_cu.Equal = the_alu.Equal;
  the_cu.Less = the_alu.Less;

  the_ip.CLK      = CLK;
  the_ip.AddrIn[] = AddrBus[];
  the_ip.ENA      = the_cu.ip_ena;
  the_ip.ModeInc  = the_cu.ip_mode_inc;

  IR[].clk = CLK;
  IR[].ena = the_cu.ir_ena;
  IR[].d = DataBus[];
  COP[7..0] = IR[15..8];
  ADDR[7..0] = IR[7..0];

  A[].clk = CLK;
  A[].ena = the_cu.a_ena;
  A[].d = DataBus[];

  the_alu.CLK = CLK;
  the_alu.ENA = the_cu.alu_ena;
  debug_alu_ena = the_cu.alu_ena;
  the_alu.OP[3..0] = COP[3..0];
  the_alu.rA[] = A[];
  the_alu.DataIn[] = DataBus[];
  the_alu.ParameterIn[] = AddrBus[];

  the_ram.clk = CLK;
  the_ram.addr[] = AddrBus[];
  the_ram.DataIn[] = DataBus[];
  the_ram.ModeWrite = the_cu.ram_write;
  
  FOR i IN 0 TO 15 GENERATE
    DataBus[i] = TRI( the_ram.DataOut[i], the_cu.ram_db_ena );
    DataBus[i] = TRI( A[i].q, the_cu.a_db_ena);
    DataBus[i] = TRI( the_alu.DataOut[i], the_cu.alu_db_ena);
  END GENERATE;
  debug_ram_out[] = the_ram.DataOut[];
  debug_ram_db_ena= the_cu.ram_db_ena;
  debug_a_db_ena = the_cu.a_db_ena;
  debug_alu_db_ena = the_cu.alu_db_ena;

  FOR i IN 0 TO 7 GENERATE
      AddrBus[i] = TRI( the_ip.AddrOut[i], the_cu.ip_ab_ena );
      AddrBus[i] = TRI( IR[i].q, the_cu.ir_ab_ena );
  END GENERATE;
  debug_ip_ab_ena = the_cu.ip_ab_ena;
  debug_ir_ab_ena = the_cu.ir_ab_ena;
  
  AB[] = AddrBus[];
  DB[] = DataBus[];
  rA[] = A[].q;
  Greater = the_alu.Greater;
  Less = the_alu.Less;
  Equal = the_alu.Equal;
  debug_cop[] = COP[];
  debug_addr[] = ADDR[];
  debug_greater = the_alu.debug_greater;
  debug_less = the_alu.debug_less;
END;
